---
import { z } from "astro/zod";
import Layout from "../layouts/Layout.astro";
import { Cask } from "../lib/homebrew";

async function fetchCasks() {
  const response = await fetch("https://formulae.brew.sh/api/cask.json");
  if (!response.ok) {
    throw new Error("Failed to fetch casks");
  }
  const json = await response.json();
  const casksJson = z.array(z.any()).parse(json);
  const parsed = casksJson.map(cask => Cask.safeParse(cask));
  return parsed.reduce(
    (acc, cask, i) => {
      if (cask.success) {
        acc.success.push(cask.data.token);
      } else {
        acc.errors.push(casksJson[i].token);
      }
      return acc;
    },
    {
      success: [] as string[],
      errors: [] as string[],
    },
  );
}

const { success, errors } = await fetchCasks();
const total = success.length + errors.length;
---

<Layout title="Nix Casks">
  <h1 class="text-4xl font-semibold">Nix Casks</h1>
  <p>
    {success.length} of {total} casks were successfully parsed.
  </p>
  <h2 class="text-2xl font-semibold">Errors</h2>
  <ul>
    {
      errors.map(token => (
        <li>
          <a href={`/cask/${token}`}>{token}</a>
        </li>
      ))
    }
  </ul>
  <h2 class="text-2xl font-semibold">Success</h2>
  <ul>
    {
      success.map(token => (
        <li>
          <a href={`/cask/${token}`}>{token}</a>
        </li>
      ))
    }
  </ul>
</Layout>
